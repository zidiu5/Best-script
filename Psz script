local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("love_ahxello", "BloodTheme")

-- Main
local Main = Window:NewTab("Gamepass")
local MainSection = Main:NewSection("Buy Gamepasses")

local function buyGamepass(gamepassId, description)
    workspace:WaitForChild("ROBLOX RULES YES"):WaitForChild("__REMOTES"):WaitForChild("buy gamepass"):InvokeServer(gamepassId, description)
end

MainSection:NewButton("Lucky", "Buys Lucky Gamepass", function()
    buyGamepass(683292030, "Lucky")
end)

MainSection:NewButton("Auto Hatch", "Buys Auto Hatch Gamepass", function()
    buyGamepass(239769964, "Auto Hatch")
end)

MainSection:NewButton("Hoverboard", "Buys Hoverboard Gamepass", function()
    buyGamepass(239771490, "Hoverboard")
end)

MainSection:NewButton("Teleport", "Buys Teleport Gamepass", function()
    buyGamepass(254430258, "Teleport")
end)

MainSection:NewButton("Skip Egg Open", "Buys Skip Egg Open Gamepass", function()
    buyGamepass(239770648, "Skip Egg Open")
end)

MainSection:NewButton("Pet Storage", "Buys Pet Storage Gamepass", function()
    buyGamepass(239770349, "Pet Storage")
end)

MainSection:NewButton("Super Pet Storage", "Buys Super Pet Storage Gamepass", function()
    buyGamepass(239770174, "Super Pet Storage")
end)

MainSection:NewButton("Magnet", "Buys Magnet Gamepass", function()
    buyGamepass(272929139, "Magnet")
end)

MainSection:NewButton("VIP", "Buys VIP Gamepass", function()
    buyGamepass(239771752, "VIP")
end)

MainSection:NewButton("Mythical Hunter", "Buys Mythical Hunter Gamepass", function()
    buyGamepass(272928960, "Mythical Hunter")
end)

MainSection:NewButton("Triple Egg Open", "Buys Triple Egg Open Gamepass", function()
    buyGamepass(239771284, "Triple Egg Open")
end)

MainSection:NewButton("Magic Eggs", "Buys Magic Eggs Gamepass", function()
    buyGamepass(272929077, "Magic Eggs")
end)

MainSection:NewButton("8 Pets Equipped", "Buys 8 Pets Equipped Gamepass", function()
    buyGamepass(264133235, "8 Pets Equipped")
end)


-- AutoFarm
local Farm = Window:NewTab("AutoFarm (NOT WORKING)")
local FarmSection = Farm:NewSection("AutoFarm")


-- Egg
local Egg = Window:NewTab("Eggs")
local EggSection = Egg:NewSection("AutoHatch Normal Spawn Eggs")

local function toggleOption(option, isEnabled)
    local optionMap = {
        ["Cracked Egg"] = function() workspace:WaitForChild("ROBLOX RULES YES"):WaitForChild("__REMOTES"):WaitForChild("buyx egg"):InvokeServer("Cracked Egg", false, false) end,
        ["Spotted Egg"] = function() workspace:WaitForChild("ROBLOX RULES YES"):WaitForChild("__REMOTES"):WaitForChild("buyx egg"):InvokeServer("Spotted Egg", false, false) end,
        ["Wood Egg"] = function() workspace:WaitForChild("ROBLOX RULES YES"):WaitForChild("__REMOTES"):WaitForChild("buyx egg"):InvokeServer("Wood Egg", false, false) end,
        ["Grass Egg"] = function() workspace:WaitForChild("ROBLOX RULES YES"):WaitForChild("__REMOTES"):WaitForChild("buyx egg"):InvokeServer("Grass Egg", false, false) end,
        ["Beachball Egg"] = function() workspace:WaitForChild("ROBLOX RULES YES"):WaitForChild("__REMOTES"):WaitForChild("buyx egg"):InvokeServer("Beachball Egg", false, false) end,
        ["Coconut Egg"] = function() workspace:WaitForChild("ROBLOX RULES YES"):WaitForChild("__REMOTES"):WaitForChild("buyx egg"):InvokeServer("Coconut Egg", false, false) end,
        ["Rock Egg"] = function() workspace:WaitForChild("ROBLOX RULES YES"):WaitForChild("__REMOTES"):WaitForChild("buyx egg"):InvokeServer("Rock Egg", false, false) end,
        ["Geode Egg"] = function() workspace:WaitForChild("ROBLOX RULES YES"):WaitForChild("__REMOTES"):WaitForChild("buyx egg"):InvokeServer("Geode Egg", false, false) end,
        ["Snow Egg"] = function() workspace:WaitForChild("ROBLOX RULES YES"):WaitForChild("__REMOTES"):WaitForChild("buyx egg"):InvokeServer("Snow Egg", false, false) end,
        ["Ice Egg"] = function() workspace:WaitForChild("ROBLOX RULES YES"):WaitForChild("__REMOTES"):WaitForChild("buyx egg"):InvokeServer("Ice Egg", false, false) end,
        ["Icicle Egg"] = function() workspace:WaitForChild("ROBLOX RULES YES"):WaitForChild("__REMOTES"):WaitForChild("buyx egg"):InvokeServer("Icicle Egg", false, false) end,
        ["Yeti Egg"] = function() workspace:WaitForChild("ROBLOX RULES YES"):WaitForChild("__REMOTES"):WaitForChild("buyx egg"):InvokeServer("Yeti Egg", false, false) end,
        ["Cactus Egg"] = function() workspace:WaitForChild("ROBLOX RULES YES"):WaitForChild("__REMOTES"):WaitForChild("buyx egg"):InvokeServer("Cactus Egg", false, false) end,
        ["Spiked Egg"] = function() workspace:WaitForChild("ROBLOX RULES YES"):WaitForChild("__REMOTES"):WaitForChild("buyx egg"):InvokeServer("Spiked Egg", false, false) end,
        ["Obsidian Egg"] = function() workspace:WaitForChild("ROBLOX RULES YES"):WaitForChild("__REMOTES"):WaitForChild("buyx egg"):InvokeServer("Obsidian Egg", false, false) end,
        ["Magma Egg"] = function() workspace:WaitForChild("ROBLOX RULES YES"):WaitForChild("__REMOTES"):WaitForChild("buyx egg"):InvokeServer("Magma Egg", false, false) end,
        ["Dominus Egg"] = function() workspace:WaitForChild("ROBLOX RULES YES"):WaitForChild("__REMOTES"):WaitForChild("buyx egg"):InvokeServer("Dominus Egg", false, false) end
    }
    
    local action = optionMap[option]
    if action then
        if isEnabled then
            action()  -- Execute action immediately if enabled
        else
            -- Stop executing if disabled (not implemented in this example)
        end
    else
        print("Option not found:", option)
    end
end

local toggleState = false  -- Initial toggle state

local function toggleSelectedOption()
    local selectedOption = EggSection.OptionsDropdown.currentOption
    toggleState = not toggleState  -- Toggle the state
    EggSection.OptionsDropdown:SetOptionState(toggleState)  -- Reflect the toggle state visually
    
    toggleOption(selectedOption, toggleState)  -- Toggle the option
end

-- Replace the button with a toggle
EggSection:NewToggle("Toggle Selected Option", "Toggles the selected option", function(isEnabled)
    toggleSelectedOption()
end)
